
module display_lightRegulator(
	input clk,
	input rst,
	
	input[2:0] light,
	
	output reg ligSig
);

reg[4:0] f_tim;
reg[4:0] n_tim;

always@(posedge clk or posedge rst)
	if(rst) f_tim <= 0;
	else f_tim <= n_tim;

always@(*)begin
	n_tim = f_tim + 1;
	ligSig = 0;
	
	case(light)
		1: if(f_tim <= 4) ligSig = 1;
		2: if(f_tim <= 5) ligSig = 1;
		3: if(f_tim <= 6) ligSig = 1;
		4: if(f_tim <= 7) ligSig = 1;
		5: if(f_tim <= 9) ligSig = 1;
		6: if(f_tim <= 12) ligSig = 1;
		7: if(f_tim <= 15) ligSig = 1;
		default:;
	endcase
	
end

endmodule

module display_outBuffer(
	input clk,
	input rst,
	
	input[7:0] inSegment,
	input[3:0] inSelect,
	
	output reg[7:0] segment,
	output reg[3:0] select
);

always@(posedge clk or posedge rst)
	if(rst) begin
		segment <= 0;
		select <= 0;	
	end
	else begin
		segment <= ~inSegment;
		select <= ~inSelect;
	end
	
endmodule